/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.ifba.scop.patente.view;

import br.com.ifba.scop.infraestructure.service.IFachada;
import br.com.ifba.scop.patente.model.Patente;
import br.com.ifba.scop.patente.model.PatenteTableModel;
import java.util.List;

/**
 * This is the main screen of patente part.
 * @author Igor Lopes
 */
public class CentroPatente extends javax.swing.JFrame {
    
    private final PatenteTableModel patenteModel = new PatenteTableModel();

    /**
     * It Returns the patente table model (jtable).
     * @return PatenteTableModel
     */
    private PatenteTableModel getPatenteModel() {
        return patenteModel;
    }

    /**
     * Creates new form CentroPatente
     */
    public CentroPatente() {
        initComponents();
        this.tblPatentes.setModel(patenteModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panSearch = new javax.swing.JPanel();
        lblPesquisar = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        radArea = new javax.swing.JRadioButton();
        radNumero = new javax.swing.JRadioButton();
        radTitulo = new javax.swing.JRadioButton();
        panJanelaTitulo = new javax.swing.JPanel();
        lblJanelaTitulo = new javax.swing.JLabel();
        panTableData = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPatentes = new javax.swing.JTable();
        lblInfoAtualizar = new javax.swing.JLabel();
        lblInfoDeletar = new javax.swing.JLabel();
        btnNovo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Centro de Patentes");
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        lblPesquisar.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPesquisar.setText("Pesquisa:");

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyPressed(evt);
            }
        });

        radArea.setText("Por Área");
        radArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radAreaMouseClicked(evt);
            }
        });

        radNumero.setText("Por Número");
        radNumero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radNumeroMouseClicked(evt);
            }
        });

        radTitulo.setText("Por Título");
        radTitulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radTituloMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panSearchLayout = new javax.swing.GroupLayout(panSearch);
        panSearch.setLayout(panSearchLayout);
        panSearchLayout.setHorizontalGroup(
            panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panSearchLayout.createSequentialGroup()
                        .addComponent(lblPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar))
                    .addGroup(panSearchLayout.createSequentialGroup()
                        .addComponent(radArea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radNumero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radTitulo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panSearchLayout.setVerticalGroup(
            panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radArea)
                    .addComponent(radNumero)
                    .addComponent(radTitulo))
                .addContainerGap())
        );

        lblJanelaTitulo.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        lblJanelaTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblJanelaTitulo.setText("Centro de Patentes");

        javax.swing.GroupLayout panJanelaTituloLayout = new javax.swing.GroupLayout(panJanelaTitulo);
        panJanelaTitulo.setLayout(panJanelaTituloLayout);
        panJanelaTituloLayout.setHorizontalGroup(
            panJanelaTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panJanelaTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblJanelaTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );
        panJanelaTituloLayout.setVerticalGroup(
            panJanelaTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panJanelaTituloLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblJanelaTitulo)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        tblPatentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Numero", "Titulo", "Area", "Editar", "Deletar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatentesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPatentes);

        lblInfoAtualizar.setText("Para Atualizar, dê 2 (dois) cliques sobre a linha.");

        lblInfoDeletar.setText("Para Deletar, clique na coluna correspondente a linha.");

        javax.swing.GroupLayout panTableDataLayout = new javax.swing.GroupLayout(panTableData);
        panTableData.setLayout(panTableDataLayout);
        panTableDataLayout.setHorizontalGroup(
            panTableDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTableDataLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(panTableDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panTableDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblInfoAtualizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblInfoDeletar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        panTableDataLayout.setVerticalGroup(
            panTableDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panTableDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInfoAtualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInfoDeletar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panJanelaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(panTableData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panJanelaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panTableData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnNovo)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method calls cadastro patente screen.
     * @param evt Action event
     */
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        CadastroPatente casdastro = new CadastroPatente(); // instanciando nova tela
        casdastro.setVisible(true); // tornando tela de cadastro visivel
    }//GEN-LAST:event_btnNovoActionPerformed

    /**
     * Search by Area.
     * @param evt Mouse event
     */
    private void radAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radAreaMouseClicked
        // TODO add your handling code here:
        // desmarcando demais campos
        if (this.radNumero.isSelected()) {
            this.radNumero.setSelected(false);
        }
        if (this.radTitulo.isSelected()) {
            this.radTitulo.setSelected(false);
        }
    }//GEN-LAST:event_radAreaMouseClicked

    /**
     * Search by Number.
     * @param evt Mouse event
     */
    private void radNumeroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radNumeroMouseClicked
        // TODO add your handling code here:
        if (this.radArea.isSelected()) {
            this.radArea.setSelected(false);
        }
        if (this.radTitulo.isSelected()) {
            this.radTitulo.setSelected(false);
        }
    }//GEN-LAST:event_radNumeroMouseClicked

    /**
     * Search by Title.
     * @param evt Mouse Event
     */
    private void radTituloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radTituloMouseClicked
        // TODO add your handling code here:
        if (this.radNumero.isSelected()) {
            this.radNumero.setSelected(false);
        }
        if (this.radArea.isSelected()) {
            this.radArea.setSelected(false);
        }
    }//GEN-LAST:event_radTituloMouseClicked

    /**
     * Search when the user press a key.
     * @param evt Key event.
     */
    private void txtPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyPressed
        // TODO add your handling code here:
        // instanciando patente entidade
        Patente patente = new Patente();
        // instanciando fachada
        IFachada fachada = 
                new br.com.ifba.scop.infraestructure.service.Fachada();
        // qual o tipo de pesquisa
        if (this.radArea.isSelected()) {
            // area
            patente.setAreaInvencao(this.txtPesquisar.getText());
            // retorna pesquisa de área
            List<Patente> dados = fachada.searchPatenteArea(patente);
            // testa se houve erro
            if (dados == null || dados.isEmpty()) {
                javax.swing.JOptionPane.showConfirmDialog(null, 
                        "Erro de Busca por Área! Nada Encontrado.");
                return;
            }
            this.patenteModel.removeAllRows(); // remove all rows
            // insert data
            dados.forEach((c) -> {
                this.patenteModel.addRow(c);
            });
        } 
        else if (this.radNumero.isSelected()) {
            // numero
            // evita erro de string não poder ser convertida para numero
            long num = (long) this.stringBeNumber(this.txtPesquisar.getText());
            patente.setNumero(num);
            // retorna pesquisa de numero
            List<Patente> dados = fachada.searchPatenteNumber(patente);
            // testa se houve erro
            if (dados == null || dados.isEmpty()) {
                javax.swing.JOptionPane.showConfirmDialog(null, 
                        "Erro de Busca por Número! Nada Encontrado.");
                return;
            }
            this.patenteModel.removeAllRows(); // remove all rows
            // insert data
            dados.forEach((c) -> {
                this.patenteModel.addRow(c);
            });
        } else if (this.radTitulo.isSelected()) {
            // titulo
            patente.setTituloInvencao(this.txtPesquisar.getText());
            // retorna pesquisa de titulo
            List<Patente> dados = fachada.searchPatenteTitle(patente);
            // testa se houve erro
            if (dados == null || dados.isEmpty()) {
                javax.swing.JOptionPane.showConfirmDialog(null, 
                        "Erro de Busca por Título! Nada Encontrado.");
                return;
            }
            this.patenteModel.removeAllRows(); // remove all rows
            // insert data
            dados.forEach((c) -> {
                this.patenteModel.addRow(c);
            });
        }
    }//GEN-LAST:event_txtPesquisarKeyPressed

    /**
     * update or delete.
     * @param evt Mouse Event
     */
    private void tblPatentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatentesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            // valores selecionados
            Object forID;
            Object forNum;
            // tratando exceção no modelo da tabela
            try {
                forID = this.getPatenteModel().getValueAt(this.tblPatentes.getSelectedRow(), 0);
                forNum = this.getPatenteModel().getValueAt(this.tblPatentes.getSelectedRow(), 1);
            } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                forID = 0;
                forNum = 0;
            }
            // Convert to string
            String id = String.valueOf(forID);
            String num = String.valueOf(forNum);
            // instanciando atualizar e enviando valores
            AtualizaPatente atualiza = new AtualizaPatente(id,num); // instanciando nova tela
            atualiza.setVisible(true); // tornando visível
        }
        else if (this.tblPatentes.getSelectedColumn() == 4) {
            this.deleteRegister();
        }
    }//GEN-LAST:event_tblPatentesMouseClicked

    /**
     * always list all elements when windows focus was found.
     * @param evt WindowEvent
     */
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        this.getPatenteModel().removeAllRows();
        this.forListagemAll(); // atualiza todos os elementos vistos na tabela.
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CentroPatente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CentroPatente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CentroPatente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CentroPatente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CentroPatente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNovo;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblInfoAtualizar;
    private javax.swing.JLabel lblInfoDeletar;
    private javax.swing.JLabel lblJanelaTitulo;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JPanel panJanelaTitulo;
    private javax.swing.JPanel panSearch;
    private javax.swing.JPanel panTableData;
    private javax.swing.JRadioButton radArea;
    private javax.swing.JRadioButton radNumero;
    private javax.swing.JRadioButton radTitulo;
    private javax.swing.JTable tblPatentes;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
    
    /**
     * This Method verifies if a string can be a number or not.
     * @param value String.
     * @return Integer.
     */
    private int stringBeNumber(String value) {
        int number;
        try {
            number = Integer.parseInt(value);
        } catch (NumberFormatException ex) {
            number = 0;
        }
        return number;
    }
    
    /**
     * This method insert all data found inside database into the JTable.
     */
    private void forListagemAll() {
        // instancia fachada
        IFachada fachada =
                new br.com.ifba.scop.infraestructure.service.Fachada();
        // inserindo numa lista
        List<Patente> patentes = fachada.getAllPatente();
        if (patentes == null || patentes.isEmpty()) {
            return;
        }
        // inserindo linha/s na tabela
        patentes.forEach((p) -> {
            this.getPatenteModel().addRow(p);
        });
    }
    
    /**
     * This method is for delete a register from jtable.
     */
    private void deleteRegister() {
        // TODO add your handling code here:
        int idx;
        Object forID;
        // tratando exceção no modelo da tabela
        try {
            idx = this.tblPatentes.getSelectedRow(); // selected row index
            forID = this.patenteModel.getValueAt(idx, 0);
        } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
            javax.swing.JOptionPane.showMessageDialog(null,
                    "Impossível Deletar! Registro não Selecionado.");
            return;
        }
        String id = String.valueOf(forID);
        // confirme exclusão messagem
        int choose = javax.swing.JOptionPane.showConfirmDialog(null, "Deletar Patente ID: "+id
                + "\nTem Certeza?");
        if (choose < 0 || choose > 0) {
            return; // o usuario desistiu de excluir, encerra.
        }
        // instanciando patente
        Patente patente = new Patente();
        patente.setId((long) this.stringBeNumber(id)); // setando na entidade
        // instanciando fachada
        IFachada fachada = new 
            br.com.ifba.scop.infraestructure.service.Fachada();
        // enviando valores e testando sucesso ou não
        if (fachada.deletePatente(patente)) {
            javax.swing.JOptionPane.showMessageDialog(null, 
                    "Patente Encontrada e Deletada.");
            this.patenteModel.removeRow(idx);
        } else {
            javax.swing.JOptionPane.showMessageDialog(null, 
                    "Erro ao Deletar: Patente Não Encontrada!");
        }
    }
}
